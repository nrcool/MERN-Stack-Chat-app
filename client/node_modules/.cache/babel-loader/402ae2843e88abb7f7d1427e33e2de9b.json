{"ast":null,"code":"var _jsxFileName = \"/home/naqvi/Desktop/NodeProjects/React-Chat-App/client/src/components/Main.jsx\";\nimport React, { Component } from 'react';\nimport Userlist from './userlist';\nimport Msj from \"./msj\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRocket } from '@fortawesome/free-solid-svg-icons';\nimport io from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nconst socket = io(\"http://localhost:4000\");\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      msj: \"\"\n    };\n\n    this.sendmsj = e => {\n      e.preventDefault();\n\n      if (this.state.msj.trim() !== \"\") {\n        let newmsj = {\n          name: this.props.data.username,\n          image: this.props.data.userimage,\n          msj: this.state.msj\n        };\n        socket.emit(\"chat\", newmsj);\n        this.setState({\n          msj: \"\"\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    socket.on(\"usersOnline\", users => {\n      this.props.usersAll(users);\n    });\n    socket.on(\"chat\", data => {\n      this.props.addMsj(data);\n    });\n  }\n\n  scrollToBottom() {\n    const scrollHeight = this.refs.scrollme.scrollHeight;\n    const height = this.refs.scrollme.clientHeight;\n    const maxScrollTop = scrollHeight - height;\n    this.refs.scrollme.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    window.addEventListener('beforeunload', event => {\n      socket.emit(\"disconnected\", this.props.data.username);\n    });\n    return React.createElement(React.Fragment, null, React.createElement(Userlist, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"msjcontainer\",\n      ref: \"scrollme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.data.messages.map((msj, i) => {\n      return React.createElement(Msj, {\n        key: i,\n        classN: this.props.data.username === msj.name ? \"mymsj\" : \"msj\",\n        username: msj.name,\n        image: msj.image,\n        message: msj.msj,\n        time: new Date().toLocaleTimeString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    })), React.createElement(\"form\", {\n      onSubmit: this.sendmsj,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      value: this.state.msj,\n      onChange: e => this.setState({\n        msj: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faRocket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMsj: msj => dispatch({\n      type: \"addedMsj\",\n      payload: msj\n    }),\n    usersAll: user => dispatch({\n      type: \"usersAll\",\n      payload: user\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/home/naqvi/Desktop/NodeProjects/React-Chat-App/client/src/components/Main.jsx"],"names":["React","Component","Userlist","Msj","FontAwesomeIcon","faRocket","io","connect","socket","Main","state","msj","sendmsj","e","preventDefault","trim","newmsj","name","props","data","username","image","userimage","emit","setState","componentDidMount","on","users","usersAll","addMsj","scrollToBottom","scrollHeight","refs","scrollme","height","clientHeight","maxScrollTop","scrollTop","componentDidUpdate","render","window","addEventListener","event","messages","map","i","Date","toLocaleTimeString","target","value","mapStateToProps","mapDispatchToProps","dispatch","type","payload","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Userlist from './userlist';\nimport Msj from \"./msj\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRocket} from '@fortawesome/free-solid-svg-icons'\nimport io from \"socket.io-client\";\nimport {connect} from \"react-redux\";\n\nconst socket=io(\"http://localhost:4000\")\n\nclass Main extends Component {\n\n  state={\n    msj:\"\",\n  }\ncomponentDidMount(){ \n   socket.on(\"usersOnline\",(users)=>{\n    \n   this.props.usersAll(users) \n  })\n  socket.on(\"chat\",data=>{\n    this.props.addMsj(data);\n  })\n}\n\n\n  sendmsj=(e)=>{\n    e.preventDefault();\n    if(this.state.msj.trim()!==\"\"){\n      let newmsj={name:this.props.data.username,image:this.props.data.userimage,msj:this.state.msj}\n    socket.emit(\"chat\",newmsj)\n    this.setState({\n      msj:\"\",\n    })\n    }\n  }\n  scrollToBottom() {\n    const scrollHeight = this.refs.scrollme.scrollHeight;\n    const height = this.refs.scrollme.clientHeight;\n    const maxScrollTop = scrollHeight - height;\n    this.refs.scrollme.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  }\n  \n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n    render() {\n      window.addEventListener('beforeunload', (event) => {\n        socket.emit(\"disconnected\",this.props.data.username)\n    });\n        return (\n            <>\n      {/*       <div className=\"userpage\"> */}\n        <Userlist/>\n     {/*    </div> */}\n        <div className=\"container\">\n      <div className=\"msjcontainer\" ref=\"scrollme\">\n       {this.props.data.messages.map((msj,i)=>{\n         return(  <Msj key={i} classN={this.props.data.username===msj.name?\"mymsj\":\"msj\"} username={msj.name} image={msj.image} message={msj.msj} time={new Date().toLocaleTimeString()}/> )\n       })}\n        </div> \n        <form onSubmit={this.sendmsj} className=\"form\">\n          <input className=\"input\" type=\"text\" value={this.state.msj} onChange={(e)=>this.setState({msj:e.target.value})}/>\n          <button className=\"btn\" type=\"submit\"><FontAwesomeIcon icon={faRocket} /></button>\n        </form>\n        </div>\n        </>\n        )\n    }\n}\nconst mapStateToProps=(state)=>{\n    return({data:state})\n}\nconst mapDispatchToProps=(dispatch)=>{\n  return({addMsj:msj=>dispatch({type:\"addedMsj\",payload:msj}),\nusersAll:user=>dispatch({type:\"usersAll\",payload:user})  \n}\n  )\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Main)"]},"metadata":{},"sourceType":"module"}