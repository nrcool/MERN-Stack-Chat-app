{"ast":null,"code":"var _jsxFileName = \"/home/naqvi/Desktop/NodeProjects/React-Chat-App/client/src/components/Login.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\nconst socket = io(\"http://localhost:4000\");\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginname: \"\",\n      image: \"https://joeschmoe.io/api/v1/male/\",\n      userExist: \"\",\n      User: {},\n      success: true\n    };\n\n    this.loginUser = e => {\n      fetch(\"http://localhost:4000/main/allmessages\").then(res => res.json()).then(data => {\n        this.props.loadinginitialdata(data);\n      });\n      this.setState({\n        loginname: e.target.value\n      }, () => {\n        this.props.onlineusers.map(user => {\n          if (user.name === this.state.loginname) {\n            this.setState({\n              userExist: \"USER ALREADY EXIST\",\n              success: false\n            });\n          } else if (this.state.loginname.trim() !== \"\" && user.name !== this.state.loginname) {\n            let image = this.state.image + this.state.loginname;\n            const myuser = {\n              name: this.state.loginname,\n              image: image\n            };\n            this.setState({\n              userExist: \"\",\n              User: myuser,\n              success: true\n            });\n          }\n        });\n      });\n    };\n\n    this.loginsubmit = e => {\n      e.preventDefault();\n\n      if (this.state.success && this.state.loginname.trim() !== \"\") {\n        socket.emit(\"connecteduser\", this.state.User);\n        this.props.adduser(this.state.User);\n        this.props.history.push(\"/main\");\n      } else {\n        this.setState({\n          userExist: \"please try again with different username\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.loginsubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", React.createElement(\"input\", {\n      className: \"logininput\",\n      type: \"text\",\n      onChange: this.loginUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"userexist\",\n      style: {\n        color: \"white\",\n        paddingLeft: \"10px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.userExist), React.createElement(\"button\", {\n      className: \"loginbtn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    adduser: user => dispatch({\n      type: \"userAdded\",\n      payload: user\n    }),\n    loadinginitialdata: data => dispatch({\n      type: \"initialdata\",\n      payload: data\n    })\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    onlineusers: state.onlineusers\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/naqvi/Desktop/NodeProjects/React-Chat-App/client/src/components/Login.jsx"],"names":["React","Component","connect","io","socket","Login","state","loginname","image","userExist","User","success","loginUser","e","fetch","then","res","json","data","props","loadinginitialdata","setState","target","value","onlineusers","map","user","name","trim","myuser","loginsubmit","preventDefault","emit","adduser","history","push","render","color","paddingLeft","textAlign","mapDispatchToProps","dispatch","type","payload","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\"\nimport io from \"socket.io-client\";\n\nconst socket=io(\"http://localhost:4000\")\n\nclass Login extends Component {\n\n    state={\n        loginname:\"\",\n        image:`https://joeschmoe.io/api/v1/male/`,\n        userExist:\"\",\n        User:{},\n        success:true\n        \n      }\n      loginUser=(e)=>{ \n        fetch(\"http://localhost:4000/main/allmessages\")\n        .then(res=>res.json())\n        .then(data=>{\n          \n          this.props.loadinginitialdata(data)})\n        this.setState({loginname:e.target.value},()=>{\n\n         this.props.onlineusers.map(user=>{\n\n            if(user.name===this.state.loginname){\n              this.setState({\n              userExist:\"USER ALREADY EXIST\",\n              success:false\n            })\n            \n            }else if(this.state.loginname.trim()!==\"\"&& user.name!==this.state.loginname){\n            let image=this.state.image+this.state.loginname\n            const myuser={name:this.state.loginname,image:image}\n            this.setState({\n             userExist:\"\",\n              User:myuser,\n              success:true\n            })       \n        }\n          }) \n        })\n        \n      }\n\n      loginsubmit=(e)=>{\n        e.preventDefault();\n        if(this.state.success&&this.state.loginname.trim()!==\"\"){\n           socket.emit(\"connecteduser\",this.state.User)\n        this.props.adduser(this.state.User);\n              this.props.history.push(\"/main\") \n      \n        }\n        else{\n          this.setState({\n            userExist:\"please try again with different username\"\n          })\n        }\n      }\n\n    render() {\n        \n        return (\n            <div className=\"login\">\n            <form onSubmit={this.loginsubmit}>\n                <label> <input className=\"logininput\" type=\"text\" onChange={this.loginUser} /><br/>\n                </label>\n                <div className=\"userexist\" style={{color:\"white\",paddingLeft:\"10px\",textAlign:\"center\"}}>{this.state.userExist}</div>\n\n                <button className=\"loginbtn\" type=\"submit\">Login</button>\n            </form>\n          </div>\n        )\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        adduser:user=>dispatch({type:\"userAdded\",payload:user}),\n        loadinginitialdata:data=>dispatch({type:\"initialdata\",payload:data})\n            }\n}\nconst mapStateToProps=(state)=>{\n    return({onlineusers:state.onlineusers})\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}