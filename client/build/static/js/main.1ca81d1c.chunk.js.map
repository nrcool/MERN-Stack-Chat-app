{"version":3,"sources":["components/Login.jsx","components/userlist.jsx","components/msj.jsx","components/Main.jsx","App.js","reducer.js/Reducer.js","index.js"],"names":["socket","io","Login","state","loginname","image","userExist","User","success","loginUser","e","fetch","then","res","json","data","props","loadinginitialdata","setState","target","value","onlineusers","map","user","name","trim","myuser","loginsubmit","preventDefault","emit","adduser","history","push","className","onSubmit","this","type","onChange","style","color","paddingLeft","textAlign","Component","connect","dispatch","payload","currenOnlineUsers","useState","Show","setShow","onClick","i","key","src","width","alt","Msj","classN","username","message","time","Main","msj","sendmsj","newmsj","userimage","on","users","usersAll","addMsj","maxScrollTop","refs","scrollme","scrollHeight","clientHeight","scrollTop","scrollToBottom","window","addEventListener","event","ref","messages","Date","toLocaleTimeString","icon","faRocket","App","exact","path","component","initial_state","Reducer","action","Messages","DBonlineUsers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ca81d1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\"\nimport io from \"socket.io-client\";\nconst socket=io(\"http://localhost:4000\")\n\nclass Login extends Component {\n\n    state={\n        loginname:\"\",\n        image:`https://joeschmoe.io/api/v1/male/`,\n        userExist:\"\",\n        User:{},\n        success:true\n        \n      }\n      loginUser=(e)=>{ \n        fetch(\"http://localhost:4000/main/allmessages\")\n        .then(res=>res.json())\n        .then(data=>{\n          \n          this.props.loadinginitialdata(data)})\n        this.setState({loginname:e.target.value},()=>{\n\n         this.props.onlineusers.map(user=>{\n\n            if(user.name===this.state.loginname){\n              this.setState({\n              userExist:\"USER ALREADY EXIST\",\n              success:false\n            })\n            \n            }else if(this.state.loginname.trim()!==\"\"&& user.name!==this.state.loginname){\n            let image=this.state.image+this.state.loginname\n            const myuser={name:this.state.loginname,image:image}\n            this.setState({\n             userExist:\"\",\n              User:myuser,\n              success:true\n            })       \n        }\n          }) \n        })\n        \n      }\n\n      loginsubmit=(e)=>{\n        e.preventDefault();\n        if(this.state.success&&this.state.loginname.trim()!==\"\"){\n           socket.emit(\"connecteduser\",this.state.User)\n        this.props.adduser(this.state.User);\n              this.props.history.push(\"/main\") \n      \n        }\n        else{\n          this.setState({\n            userExist:\"please try again with different username\"\n          })\n        }\n      }\n\n    render() {\n        \n        return (\n            <div className=\"login\">\n            <form onSubmit={this.loginsubmit}>\n                <label> <input className=\"logininput\" type=\"text\" onChange={this.loginUser} /><br/>\n                </label>\n                <div className=\"userexist\" style={{color:\"white\",paddingLeft:\"10px\",textAlign:\"center\"}}>{this.state.userExist}</div>\n\n                <button className=\"loginbtn\" type=\"submit\">Login</button>\n            </form>\n          </div>\n        )\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        adduser:user=>dispatch({type:\"userAdded\",payload:user}),\n        loadinginitialdata:data=>dispatch({type:\"initialdata\",payload:data})\n            }\n}\nconst mapStateToProps=(state)=>{\n    return({onlineusers:state.onlineusers})\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)\n","import React,{useState} from 'react'\nimport \"./userlist.css\";\nimport { connect } from 'react-redux';\nfunction Userlist(props) {\n    let [Show,setShow]=useState(false)\n    const displaynav=()=>{\n        setShow(Show=!Show)\n    }\n    return ( \n        <>\n    <div className=\"ham\" onClick={displaynav}>&#x2630;</div>\n    {Show?<div className=\"usersonline\">\n           \n           {props.onlineusers.map((user,i)=>{\n               return( <div  key={i} className=\"user\">\n                       <div className=\"image1\"><img src={user.image} width=\"50\" alt=\"userimage\"/>\n                       </div>\n                       <div className=\"name\">{user.name}\n                       </div> \n                       </div>\n                   )\n           })}\n                 \n\n       </div>:\"\"\n}\n        \n        </>\n    )\n}\nconst mapStateToProps=(state)=>{\n    return({onlineusers:state.onlineusers,\n            currenOnlineUsers:state.currenOnlineUsers})\n}\nexport default connect(mapStateToProps)( Userlist )","import React from 'react';\nimport \"./msj.css\"\n\nexport default function Msj(props) {\n    return (\n        <div className={props.classN}>\n           <div className=\"image\">\n               <img src={props.image} width=\"50\" alt=\"user profile\"/>\n               <span>{props.username}</span>\n           </div>s\n            <div className=\"text\">{props.message}\n            <span className=\"time\">{props.time}</span> </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport Userlist from './userlist';\nimport Msj from \"./msj\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRocket} from '@fortawesome/free-solid-svg-icons'\nimport io from \"socket.io-client\";\nimport {connect} from \"react-redux\"\nconst socket=io(\"http://localhost:4000\")\n\nclass Main extends Component {\n\n  state={\n    msj:\"\",\n  }\ncomponentDidMount(){ \n   socket.on(\"usersOnline\",(users)=>{\n    \n   this.props.usersAll(users) \n  })\n  socket.on(\"chat\",data=>{\n    this.props.addMsj(data);\n  })\n}\n\n\n  sendmsj=(e)=>{\n    e.preventDefault();\n    if(this.state.msj.trim()!==\"\"){\n      let newmsj={name:this.props.data.username,image:this.props.data.userimage,msj:this.state.msj}\n    socket.emit(\"chat\",newmsj)\n    this.setState({\n      msj:\"\",\n    })\n    }\n  }\n  scrollToBottom() {\n    const scrollHeight = this.refs.scrollme.scrollHeight;\n    const height = this.refs.scrollme.clientHeight;\n    const maxScrollTop = scrollHeight - height;\n    this.refs.scrollme.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  }\n  \n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n    render() {\n      window.addEventListener('beforeunload', (event) => {\n        socket.emit(\"disconnected\",this.props.data.username)\n    });\n        return (\n            <>\n      {/*       <div className=\"userpage\"> */}\n        <Userlist/>\n     {/*    </div> */}\n        <div className=\"container\">\n      <div className=\"msjcontainer\" ref=\"scrollme\">\n       {this.props.data.messages.map((msj,i)=>{\n         return(  <Msj key={i} classN={this.props.data.username===msj.name?\"mymsj\":\"msj\"} username={msj.name} image={msj.image} message={msj.msj} time={new Date().toLocaleTimeString()}/> )\n       })}\n        </div> \n        <form onSubmit={this.sendmsj} className=\"form\">\n          <input className=\"input\" type=\"text\" value={this.state.msj} onChange={(e)=>this.setState({msj:e.target.value})}/>\n          <button className=\"btn\" type=\"submit\"><FontAwesomeIcon icon={faRocket} /></button>\n        </form>\n        </div>\n        </>\n        )\n    }\n}\nconst mapStateToProps=(state)=>{\n    return({data:state})\n}\nconst mapDispatchToProps=(dispatch)=>{\n  return({addMsj:msj=>dispatch({type:\"addedMsj\",payload:msj}),\nusersAll:user=>dispatch({type:\"usersAll\",payload:user})  \n}\n  )\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Main)","import React, { Component } from 'react'\nimport './App.css';\nimport {BrowserRouter as Router,Route,Switch} from \"react-router-dom\";\nimport Login from './components/Login';\nimport Main from './components/Main';\n\nclass App extends Component {\n\nrender(){\n  return(\n    <Router>\n    <div className=\"app\">\n    <Switch>\n      <Route exact path=\"/\" component={Login}/>\n      <Route path=\"/main\" component={Main} />\n    </Switch>\n    </div>\n    </Router>\n  )\n}\n}\n\nexport default App\n\n","\nconst initial_state={\n    messages:[],\n    onlineusers:[],\n    username:\"\",\n    userimage:\"\",\n}\n\nconst Reducer=(state=initial_state,action)=>{\n     switch(action.type){\n         case \"addedMsj\":\n                return {\n                    ...state,\n                    messages:[...state.messages,action.payload]\n                   }\n       case \"userAdded\":\n                 return {\n                    ...state,\n                    onlineusers:[...state.onlineusers,action.payload],\n                    username:action.payload.name,\n                    userimage:action.payload.image,\n        } \n       case \"usersAll\":\n            return{\n                  ...state,\n                onlineusers:[...action.payload]\n            }\n        case \"initialdata\":\n           \n                 return{\n              ...state ,messages:action.payload.Messages,onlineusers:action.payload.DBonlineUsers\n            }\n\n        default :\n            return state;  \n     }\n \n\n    \n\n\n} \nexport default Reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport Reducer from './reducer.js/Reducer';\n\n\nlet store=createStore(Reducer);\n\n\nReactDOM.render(<Provider store={store}><App /> </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}